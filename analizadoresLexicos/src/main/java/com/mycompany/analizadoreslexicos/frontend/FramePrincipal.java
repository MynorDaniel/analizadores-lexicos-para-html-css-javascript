/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.analizadoreslexicos.frontend;

import com.mycompany.analizadoreslexicos.Lexer;
import com.mycompany.analizadoreslexicos.backend.GeneradorHTML;
import com.mycompany.analizadoreslexicos.backend.Reporte;
import com.mycompany.analizadoreslexicos.backend.Token;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Path;
import java.util.ArrayList;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author mynordma
 */
public class FramePrincipal extends javax.swing.JFrame {
    
    private ArrayList<Token> tokensHTML;
    private ArrayList<Token> tokensCSS;
    private ArrayList<Token> tokensJS;

    /**
     * Creates new form FramePrincipal
     */
    public FramePrincipal() {
        initComponents();
        setSize(800, 600);
        setTitle("Analizadores LÃ©xicos");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        ejecutarBtn = new javax.swing.JButton();
        mensajeLabel = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        archivoBtn = new javax.swing.JMenu();
        reporteBtn = new javax.swing.JMenu();
        generarHTMLBtn = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        ejecutarBtn.setText("Ejecutar");
        ejecutarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ejecutarBtnActionPerformed(evt);
            }
        });

        mensajeLabel.setText("---");

        archivoBtn.setText("Cargar archivo");
        archivoBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                archivoBtnMouseClicked(evt);
            }
        });
        jMenuBar1.add(archivoBtn);

        reporteBtn.setText("Reporte de tokens");
        reporteBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                reporteBtnMouseClicked(evt);
            }
        });
        jMenuBar1.add(reporteBtn);

        generarHTMLBtn.setText("Generar HTML");
        generarHTMLBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                generarHTMLBtnMouseClicked(evt);
            }
        });
        jMenuBar1.add(generarHTMLBtn);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(mensajeLabel)
                        .addGap(309, 309, 309)
                        .addComponent(ejecutarBtn)
                        .addGap(0, 389, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 472, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ejecutarBtn)
                    .addComponent(mensajeLabel))
                .addContainerGap(57, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void archivoBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_archivoBtnMouseClicked
        // Crear un FileChooser
        JFileChooser fileChooser = new JFileChooser();

        // Filtrar solo archivos de texto
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Archivos de texto", "txt");
        fileChooser.setFileFilter(filter);

        int result = fileChooser.showOpenDialog(this);

        if (result == javax.swing.JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();

            try {
                // Leer el contenido del archivo y mostrarlo en el JTextArea
                Path filePath = file.toPath();
                String content = new String(Files.readAllBytes(filePath));
                jTextArea1.setText(content);
            } catch (java.io.IOException e) {
                javax.swing.JOptionPane.showMessageDialog(this, "Error al leer el archivo", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_archivoBtnMouseClicked

    private void ejecutarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ejecutarBtnActionPerformed
        Lexer lexer = new Lexer(jTextArea1.getText());
        lexer.generarTokens();
        tokensHTML = lexer.getTokensHTML();
        tokensCSS = lexer.getTokensCSS();
        tokensJS = lexer.getTokensJS();
        
        asignarLenguajes(tokensHTML, tokensCSS, tokensJS);
      
        imprimirTokens(tokensHTML, tokensCSS, tokensJS);
    }//GEN-LAST:event_ejecutarBtnActionPerformed

    private void reporteBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_reporteBtnMouseClicked
        Reporte reporte = new Reporte();
        reporte.generarReporte(tokensHTML, tokensCSS, tokensJS);
    }//GEN-LAST:event_reporteBtnMouseClicked

    private void generarHTMLBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_generarHTMLBtnMouseClicked
        String parte1 = """
                        <!DOCTYPE html>
                        <html lang="en">
                        <head>
                        <meta charset="UTF-8">
                        <meta name="viewport" content="width=device-width, initial-scale=1.0">
                        <title>Document</title>
                        <style>""";
        
        String parte2 = """
                        </style>
                        <script>""";
        
        String parte3 = """
                        </script>
                        </head>
                        <body>""";
        
        String parte4 = """
                        </body>
                        </html>""";
        
        StringBuilder html = new StringBuilder();
        StringBuilder css = new StringBuilder();
        StringBuilder js= new StringBuilder();
        StringBuilder codigo = new StringBuilder();
        
        for (Token token : tokensHTML) {
            if(token.getValor().equals("PALABRA_RESERVADA")){
               html.append(" "); 
            }
            
            html.append(token.getTraduccion());
        }
        for (Token token : tokensCSS) {
            css.append(" ");
            css.append(token.getValor());
        }
        for (Token token : tokensJS) {
            js.append(" ");
            js.append(token.getValor());
        }
        
        codigo.append(parte1);
        codigo.append(css);
        codigo.append(parte2);
        codigo.append(js);
        codigo.append(parte3);
        codigo.append(html);
        codigo.append(parte4);
        
        GeneradorHTML generador = new GeneradorHTML();
        generador.generarHTML(codigo.toString(), "index.html");
        generador.abrirHTML("index.html");
        
    }//GEN-LAST:event_generarHTMLBtnMouseClicked

    private void imprimirTokens(ArrayList<Token> tokensHTML, ArrayList<Token> tokensCSS, ArrayList<Token> tokensJS){
        for (int i = 0; i < tokensHTML.size(); i++) {
            System.out.println("Token html " + i + ":" + tokensHTML.get(i).toString());
        }
        for (int i = 0; i < tokensCSS.size(); i++) {
            System.out.println("Token css " + i + ":" + tokensCSS.get(i).toString());
        }
        for (int i = 0; i < tokensJS.size(); i++) {
            System.out.println("Token js " + i + ":" + tokensJS.get(i).toString());
        }
    }
    
    private void asignarLenguajes(ArrayList<Token> tokensHTML, ArrayList<Token> tokensCSS, ArrayList<Token> tokensJS){
        for (int i = 0; i < tokensHTML.size(); i++) {
            tokensHTML.get(i).setLenguaje("HTML");
        }
        for (int i = 0; i < tokensCSS.size(); i++) {
            tokensCSS.get(i).setLenguaje("CSS");
        }
        for (int i = 0; i < tokensJS.size(); i++) {
            tokensJS.get(i).setLenguaje("JS");
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu archivoBtn;
    private javax.swing.JButton ejecutarBtn;
    private javax.swing.JMenu generarHTMLBtn;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JLabel mensajeLabel;
    private javax.swing.JMenu reporteBtn;
    // End of variables declaration//GEN-END:variables
}
